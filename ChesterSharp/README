# ChesterSharp

Plans:

* fetch a single document, with DTO: DONE
* post a single document, with DTO: DONE

* fetch a view of multiple documents, with DTO DONE
* design documents DONE
* create a database: DONE
* compare current design documents in system, update if necessary
* changes feed (whee streaming)
* changes feed with specified view
* list revisions, conflict resolution?
* attachments
* declarative data validation on CouchDocuments

* some sort of simple ORM/Model: view-level mapping to DTOs (built in find/findAll() routines, etc.)


* sequence numbering? seems like a local rememberance -- at least
  across the lifetime of a given consumer of events that wants
  updates.  have it instantiate an object that remembers seq, and does
  both fetching of content and holding changes listeners? should be
  pretty much the only instance of concurrent access to data in the
  entire library.  wait. seq is across the entire database.  that
  means have it on a single database connection, regardless of view

all async, naturally
